@import '../abstracts/base';

// settings
$text-color: #414141;
$line-color: #414141;
$line-size: 7;

//  Corners Mixins
@mixin line-corners($line-color: cyan, $line-size: 7, $line-type: out, $line-distance: 20) {
  position: absolute;
  width: 100%;
  transition-duration: 0.3s;

  // Arrows
  &:before,
  &:after {
    content: '';
    position: absolute;
    width: $line-size + 4px;
    height: $line-size + 4px;
    border-color: $line-color;
    border-style: solid;
    transition-duration: 0.3s;
    transform: translateZ(0);
  }

  // Top corners
  &.top {
    &:before {
      border-width: 1px 0 0 1px;
    }

    &:after {
      border-width: 1px 1px 0 0;
    }
  }

  // Bottom corners
  &.bottom {
    &:before {
      border-width: 0 0 1px 1px;
    }

    &:after {
      border-width: 0 1px 1px 0;
    }
  }

  @if $line-type == out {
    &:before {
      left: 0;
    }
    &:after {
      right: 0;
    }
    &.top {
      top: 0;
    }

    //&.bottom { bottom: $line-size + px; }

    &.bottom {
      bottom: rem-calc(-24);
    }

  }

  @if $line-type == in {
    &:before {
      left: $line-distance + px;
    }
    &:after {
      right: $line-distance + px;
    }
    &.top {
      top: $line-distance + px;
    }
    &.bottom {
      bottom: ($line-distance + $line-size) + px;
    }
  }
}

@mixin line-corners-hover($line-size: 7, $line-type: out, $line-distance: 20) {
  @if $line-type == out {
    &:before {
      left: 0;
    }
    &:after {
      right: 0;
    }
    &.top {
      top: 0;
    }
    &.bottom {
      bottom: $line-size + px;
    }
  }

  @if $line-type == in {
    &:before {
      left: $line-distance -22px;
    }
    &:after {
      right: $line-distance - 22px;
    }
    &.top {
      top: $line-distance + px;
    }
    &.bottom {
      bottom: ($line-distance + $line-size) - 32px;
    }
  }
}

// style: borders out (edge)
@mixin line-corners-out($line-color: #414141, $line-size: 7) {
  .corners {
    @include line-corners($line-color, $line-size, out);
  }
  &:hover {
    .corners {
      @include line-corners-hover($line-size, in);
    }
  }
}

// style: borders in
@mixin line-corners-in($line-color: #414141, $line-size: 7) {
  .corners {
    @include line-corners($line-color, $line-size, in);
  }
  &:hover {
    .corners {
      @include line-corners-hover($line-size, out);
    }
  }
}


//  buttons
.corner-button {
  display: inline-block;
  vertical-align: middle;
  position: relative;
  width: 100%;
  margin: 0;
  //font-family: 'Electrolize', sans-serif;
  font-family: 'Oxygen', sans-serif;

  span.corner {
    display: block;
    padding: rem-calc(28);

    font-size: rem-calc(20);
    color: $text-color;
    text-align: center;
    white-space: nowrap;
    transition: all 0.3s ease-out;

    p {
      margin-bottom: rem-calc(-20);
      text-align: left;
    }
  }

  &:hover {
    cursor: pointer;
  }

  // Include the corners
  &.out {
    @include line-corners-out(#414141);
  }

  &.in {
    @include line-corners-in($line-color);
  }
}

.corner-button {
  //opacity: 1;

  //will-change: transform, opacity;
  //animation: fadeIn 0.6s 0.5s forwards ease-out;

  // cyan theme
  &.cyan {
    $theme-color: #414141;

    span {
      color: $theme-color;
    }

    .corners {
      &:after,
      &:before {
        border-color: $theme-color;
      }
    }
  }
}

//  Box
.box {
  display: inline-block;
  vertical-align: middle;
  position: relative;
  max-width: rem-calc(304);

  .content {
    margin: rem-calc(20);
    padding: rem-calc(20);
    border: rem-calc(1) dashed rgba(65, 65, 65, 0.5);
    color: #414141;
    font-size: rem-calc(14);
    line-height: 1.3;
  }

  // Include the corners
  @include line-corners-out(#606060);
}


//  Keyframes
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(50%);
  }
  to {
    opacity: 1;
    transform: translateY(0%);
  }
}